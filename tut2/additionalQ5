#include <iostream>
#include <vector>
using namespace std;

void duplicateZeros(vector<int>& arr) {
int n = arr.size();
int zeros = 0;

// Count how many zeros can be duplicated
for (int i = 0; i < n; i++) {
if (arr[i] == 0) zeros++;
}

int i = n - 1; // pointer at original end
int j = n + zeros - 1; // virtual end (after duplicating zeros)

// Traverse backwards
while (i < j) {
if (j < n) arr[j] = arr[i]; // Only modify inside array size

if (arr[i] == 0) {
j--;
if (j < n) arr[j] = 0; // Duplicate zero
}
i--;

j--;
}
}

int main() {
vector<int> arr = {1,0,2,3,0,4,5,0};

cout << "Original Array: ";
for (int x : arr) cout << x << " ";
cout << endl;

duplicateZeros(arr);

cout << "Modified Array: ";
for (int x : arr) cout << x << " ";
cout << endl;

return 0;
}
