#include <iostream>
#include <string>
using namespace std;
#define MAX 100

class Stack {
    char arr[MAX];
    int top;
public:
    Stack() { top = -1; }
    void push(char c) { arr[++top] = c; }
    char pop() { return (top == -1) ? '\0' : arr[top--]; }
    bool isEmpty() { return top == -1; }
};

bool isMatch(char a, char b) {
    return (a == '(' && b == ')') || (a == '{' && b == '}') || (a == '[' && b == ']');
}

bool checkBalanced(string exp) {
    Stack s;
    for (char c : exp) {
        if (c=='(' || c=='{' || c=='[') s.push(c);
        else if (c==')'||c=='}'||c==']') {
            char top = s.pop();
            if (!isMatch(top, c)) return false;
        }
    }
    return s.isEmpty();
}

int main() {
    string exp = "{[()]}";
    cout << exp << " -> " << (checkBalanced(exp) ? "Balanced" : "Not Balanced") << endl;
}
